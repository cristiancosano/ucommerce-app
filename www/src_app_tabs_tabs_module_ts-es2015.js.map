{"version":3,"sources":["./node_modules/@auth0/angular-jwt/__ivy_ngcc__/fesm2015/auth0-angular-jwt.js","./src/app/services/user/user.service.ts","./src/app/tabs/tabs-routing.module.ts","./src/app/tabs/tabs.module.ts","./src/app/tabs/tabs.page.ts","./src/app/tabs/tabs.page.scss","./src/app/tabs/tabs.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAiG;AACtD;AACD;AACd;AAC6B;;AAEjB;AACxC,wBAAwB,yDAAc;;AAEtC;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA,qC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,eAAe;AAChI,uCAAuC,gEAAyB,EAAE,0DAA0D;AAC5H;AACA,KAAK,gCAAgC,OAAO,iDAAM,wBAAwB;AAC1E;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB,EAAE;AAClD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW,EAAE,MAAM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","file":"src_app_tabs_tabs_module_ts-es2015.js","sourcesContent":["import { InjectionToken, Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { mergeMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport * as Éµngcc0 from '@angular/core';\nconst JWT_OPTIONS = new InjectionToken('JWT_OPTIONS');\n\n// tslint:disable:no-bitwise\nclass JwtHelperService {\n    constructor(config = null) {\n        this.tokenGetter = (config && config.tokenGetter) || function () { };\n    }\n    urlBase64Decode(str) {\n        let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += \"==\";\n                break;\n            }\n            case 3: {\n                output += \"=\";\n                break;\n            }\n            default: {\n                throw new Error(\"Illegal base64url string!\");\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    }\n    // credits for decoder goes to https://github.com/atk\n    b64decode(str) {\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        let output = \"\";\n        str = String(str).replace(/=+$/, \"\");\n        if (str.length % 4 === 1) {\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n        }\n        for (\n        // initialize result and counters\n        let bc = 0, bs, buffer, idx = 0; \n        // get next character\n        (buffer = str.charAt(idx++)); \n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n            ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n                // and if not first of each 4 characters,\n                // convert the first 8 bits to one ascii character\n                bc++ % 4)\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n            : 0) {\n            // try to find character in table (0-63, not found => -1)\n            buffer = chars.indexOf(buffer);\n        }\n        return output;\n    }\n    b64DecodeUnicode(str) {\n        return decodeURIComponent(Array.prototype.map\n            .call(this.b64decode(str), (c) => {\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n            .join(\"\"));\n    }\n    decodeToken(token = this.tokenGetter()) {\n        if (!token || token === \"\") {\n            return null;\n        }\n        const parts = token.split(\".\");\n        if (parts.length !== 3) {\n            throw new Error(\"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\");\n        }\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error(\"Cannot decode the token.\");\n        }\n        return JSON.parse(decoded);\n    }\n    getTokenExpirationDate(token = this.tokenGetter()) {\n        let decoded;\n        decoded = this.decodeToken(token);\n        if (!decoded || !decoded.hasOwnProperty(\"exp\")) {\n            return null;\n        }\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.exp);\n        return date;\n    }\n    isTokenExpired(token = this.tokenGetter(), offsetSeconds) {\n        if (!token || token === \"\") {\n            return true;\n        }\n        const date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n        if (date === null) {\n            return false;\n        }\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n    }\n    getAuthScheme(authScheme, request) {\n        if (typeof authScheme === \"function\") {\n            return authScheme(request);\n        }\n        return authScheme;\n    }\n}\nJwtHelperService.Éµfac = function JwtHelperService_Factory(t) { return new (t || JwtHelperService)(Éµngcc0.ÉµÉµinject(JWT_OPTIONS)); };\nJwtHelperService.Éµprov = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjectable({ token: JwtHelperService, factory: JwtHelperService.Éµfac });\nJwtHelperService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(JwtHelperService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [JWT_OPTIONS]\n            }] }]; }, null); })();\n\nclass JwtInterceptor {\n    constructor(config, jwtHelper, document) {\n        this.jwtHelper = jwtHelper;\n        this.document = document;\n        this.standardPorts = [\"80\", \"443\"];\n        this.tokenGetter = config.tokenGetter;\n        this.headerName = config.headerName || \"Authorization\";\n        this.authScheme =\n            config.authScheme || config.authScheme === \"\"\n                ? config.authScheme\n                : \"Bearer \";\n        this.allowedDomains = config.allowedDomains || [];\n        this.disallowedRoutes = config.disallowedRoutes || [];\n        this.throwNoTokenError = config.throwNoTokenError || false;\n        this.skipWhenExpired = config.skipWhenExpired;\n    }\n    isAllowedDomain(request) {\n        const requestUrl = new URL(request.url, this.document.location.origin);\n        // If the host equals the current window origin,\n        // the domain is allowed by default\n        if (requestUrl.host === this.document.location.host) {\n            return true;\n        }\n        // If not the current domain, check the allowed list\n        const hostName = `${requestUrl.hostname}${requestUrl.port && !this.standardPorts.includes(requestUrl.port)\n            ? \":\" + requestUrl.port\n            : \"\"}`;\n        return (this.allowedDomains.findIndex((domain) => typeof domain === \"string\"\n            ? domain === hostName\n            : domain instanceof RegExp\n                ? domain.test(hostName)\n                : false) > -1);\n    }\n    isDisallowedRoute(request) {\n        const requestedUrl = new URL(request.url, this.document.location.origin);\n        return (this.disallowedRoutes.findIndex((route) => {\n            if (typeof route === \"string\") {\n                const parsedRoute = new URL(route, this.document.location.origin);\n                return (parsedRoute.hostname === requestedUrl.hostname &&\n                    parsedRoute.pathname === requestedUrl.pathname);\n            }\n            if (route instanceof RegExp) {\n                return route.test(request.url);\n            }\n            return false;\n        }) > -1);\n    }\n    handleInterception(token, request, next) {\n        const authScheme = this.jwtHelper.getAuthScheme(this.authScheme, request);\n        let tokenIsExpired = false;\n        if (!token && this.throwNoTokenError) {\n            throw new Error(\"Could not get token from tokenGetter function.\");\n        }\n        if (this.skipWhenExpired) {\n            tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\n        }\n        if (token && tokenIsExpired && this.skipWhenExpired) {\n            request = request.clone();\n        }\n        else if (token) {\n            request = request.clone({\n                setHeaders: {\n                    [this.headerName]: `${authScheme}${token}`,\n                },\n            });\n        }\n        return next.handle(request);\n    }\n    intercept(request, next) {\n        if (!this.isAllowedDomain(request) || this.isDisallowedRoute(request)) {\n            return next.handle(request);\n        }\n        const token = this.tokenGetter(request);\n        if (token instanceof Promise) {\n            return from(token).pipe(mergeMap((asyncToken) => {\n                return this.handleInterception(asyncToken, request, next);\n            }));\n        }\n        else {\n            return this.handleInterception(token, request, next);\n        }\n    }\n}\nJwtInterceptor.Éµfac = function JwtInterceptor_Factory(t) { return new (t || JwtInterceptor)(Éµngcc0.ÉµÉµinject(JWT_OPTIONS), Éµngcc0.ÉµÉµinject(JwtHelperService), Éµngcc0.ÉµÉµinject(DOCUMENT)); };\nJwtInterceptor.Éµprov = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjectable({ token: JwtInterceptor, factory: JwtInterceptor.Éµfac });\nJwtInterceptor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] }] },\n    { type: JwtHelperService },\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(JwtInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [JWT_OPTIONS]\n            }] }, { type: JwtHelperService }, { type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\nclass JwtModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(\"JwtModule is already loaded. It should only be imported in your application's main module.\");\n        }\n    }\n    static forRoot(options) {\n        return {\n            ngModule: JwtModule,\n            providers: [\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: JwtInterceptor,\n                    multi: true,\n                },\n                options.jwtOptionsProvider || {\n                    provide: JWT_OPTIONS,\n                    useValue: options.config,\n                },\n                JwtHelperService,\n            ],\n        };\n    }\n}\nJwtModule.Éµfac = function JwtModule_Factory(t) { return new (t || JwtModule)(Éµngcc0.ÉµÉµinject(JwtModule, 12)); };\nJwtModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: JwtModule });\nJwtModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({});\nJwtModule.ctorParameters = () => [\n    { type: JwtModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(JwtModule, [{\n        type: NgModule\n    }], function () { return [{ type: JwtModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n\n/*\n * Public API Surface of angular-jwt\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JWT_OPTIONS, JwtHelperService, JwtInterceptor, JwtModule };\n\n//# sourceMappingURL=auth0-angular-jwt.js.map","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { environment } from 'src/environments/environment'\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private host = environment.apiHost + '/users';\n  private token: any = undefined;\n  private decodedToken: any = undefined;\n\n  constructor(private http: HttpClient) { }\n\n  getById(){\n    this.refreshToken()\n\n  }\n  getByEmail()\n  {\n   this.refreshToken()\n  }\n\n  create(){\n\n  }\n\n  update(name: string, email: string, password: string, phone: string ){\n    return new Promise(resolve => {\n      const token = this.getToken();\n      const decodedToken = this.getDecodedToken();\n      const params = new HttpParams().appendAll({password, email,phone,name,token})\n      const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n      console.log(params, headers)\n\n      this.http.put(this.host+'/'+decodedToken.customerId, params, {headers}).subscribe(data => resolve(data), error => console.log(error))\n    })\n  }\n  \n  delete(){\n\n  }\n\n  login(email: string, password: string){\n   \n    return new Promise(resolve => {\n      const params = new HttpParams().appendAll({password, email})\n      const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n      console.log(params, headers)\n\n      this.http.post(this.host+'/auth', params, {headers}).subscribe(\n        (data: any) => {\n          this.token = data.token\n          resolve(data.token)\n        },\n        error => console.log(error))\n    })\n  }\n\n  logout(){\n    this.token = undefined\n    this.decodedToken = undefined\n    localStorage.removeItem('token')\n  }\n\n  isAuth(){\n    this.refreshToken()\n    return this.token !== undefined && this.token !== null;\n  }\n\n  getToken(){\n    return JSON.parse(localStorage.getItem('token'));\n  }\n\n  refreshToken(){\n    this.token = JSON.parse(localStorage.getItem('token'))\n    const helper = new JwtHelperService()\n    this.decodedToken = helper.decodeToken(this.token)\n  }\n\n  getDecodedToken(){\n    this.refreshToken()\n    return this.decodedToken\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabsPage,\n    children: [\n      {\n        path: 'products',\n        loadChildren: () => import('../pages/products/home.module').then( m => m.HomePageModule)\n      },\n      {\n        path: 'categories',\n        loadChildren: () => import('../pages/categories/categories.module').then(m => m.CategoriesPageModule)\n      },\n      {\n        path: 'cart',\n        loadChildren: () => import('../pages/cart/cart.module').then(m => m.CartPageModule)\n      },\n      {\n        path: 'search',\n        loadChildren: () => import('../pages/search/search.module').then(m => m.SearchPageModule)\n      },\n      {\n        path: 'account',\n        loadChildren: () => import('../pages/account/account.module').then( m => m.AccountPageModule)\n      },\n      {\n        path: '',\n        redirectTo: '/products',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/products',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n})\nexport class TabsPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","import { Component } from '@angular/core';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n\n  private numCartItems: number\n\n  constructor(private userService: UserService) {\n    this.numCartItems = 0\n  }\n\n  isAuth = () => this.userService.isAuth()\n\n  //TODO: Obtener del servicio de carrito el numero de articulos que hay en la cesta y setearlo en numCartItems.\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWJzLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-tabs>\\n\\n  <ion-tab-bar slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"products\\\">\\n      <ion-icon name=\\\"home-outline\\\"></ion-icon>\\n      <ion-label>Home</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"categories\\\">\\n      <ion-icon name=\\\"apps-outline\\\"></ion-icon>\\n      <ion-label>Categories</ion-label>\\n    </ion-tab-button>\\n\\n    \\n    <ion-tab-button tab=\\\"cart\\\" *ngIf=\\\"isAuth()\\\">\\n      <ion-badge color=\\\"danger\\\" *ngIf=\\\"numCartItems > 0\\\">{{numCartItems}}</ion-badge>\\n      <ion-icon name=\\\"cart-outline\\\"></ion-icon>\\n      <ion-label>Cart</ion-label>\\n    </ion-tab-button>\\n\\n    \\n   \\n    <ion-tab-button tab=\\\"search\\\">\\n      <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      <ion-label>Search</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"account\\\">\\n      <ion-icon name=\\\"person-outline\\\"></ion-icon>\\n      <ion-label>Account</ion-label>\\n    </ion-tab-button>\\n\\n  </ion-tab-bar>\\n\\n</ion-tabs>\\n\";"],"sourceRoot":"webpack:///"}